name: ci/gh-actions/build

on: [push, pull_request]

jobs:
  build-ubuntu-without-scanner:
    name: "Ubuntu 24.04 (no scanner)"
    runs-on: ubuntu-latest
    container:
      image: ubuntu:24.04
    steps:
      - name: update apt
        run: apt update
      - name: install dependencies
        run: apt -y install git cmake build-essential ccache libssl-dev libunbound-dev libboost-all-dev
                            libqrencode-dev qt6-base-dev qt6-svg-dev qt6-websockets-dev qt6-multimedia-dev
                            qt6-wayland-dev libzip-dev libsodium-dev libgcrypt20-dev libx11-xcb-dev
                            protobuf-compiler libprotobuf-dev libhidapi-dev libzxing-dev libusb-dev
                            libusb-1.0-0-dev
      - name: configure git
        run: git config --global --add safe.directory '*'
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: build
        run: |
          mkdir build
          cd build
          cmake -DWITH_SCANNER=OFF ..
          cmake --build . -j $(nproc)

  build-arch:
    name: 'Arch Linux'
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: install dependencies
        run: pacman -Syyu --noconfirm git cmake base-devel unbound boost qrencode qt6-base qt6-svg qt6-websockets qt6-wayland qt6-multimedia libzip hidapi protobuf zxing-cpp
      - name: configure git
        run: git config --global --add safe.directory '*'
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: build
        run: |
          cmake -S . -B build
          cmake --build build -j $(nproc)

  build-macos:
    name: 'macOS (brew)'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: install dependencies
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew install qt libsodium libzip qrencode unbound cmake boost hidapi openssl expat libunwind-headers protobuf pkgconfig
      - name: build
        run: |
          cmake -S . -B build -DWITH_SCANNER=Off
          cmake --build build -j $(nproc)
